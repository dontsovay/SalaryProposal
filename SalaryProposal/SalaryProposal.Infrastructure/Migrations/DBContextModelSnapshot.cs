// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryProposal.Infrastructure.Context;

namespace SalaryProposal.Infrastructure.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalaryProposal.Models.Models.CalculationData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Experience");

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<decimal>("MaxSalary");

                    b.Property<decimal>("MinSalary");

                    b.Property<Guid>("PositionId");

                    b.Property<Guid>("RegionId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("RegionId");

                    b.ToTable("CalculationData","dbo");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.Logs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("Logs","dbo");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.Positions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<bool>("IsLead");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.HasKey("Id");

                    b.ToTable("Positions","dbo");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Expires");

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<string>("RemoteIpAddress");

                    b.Property<string>("Token");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.Property<Guid>("UserId");

                    b.Property<Guid?>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.Regions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.HasKey("Id");

                    b.ToTable("Regions","dbo");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.HasKey("Id");

                    b.ToTable("Roles","dbo");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("IdentityId");

                    b.Property<DateTime>("InsertDate");

                    b.Property<string>("InsertUser");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<Guid>("RoleId");

                    b.Property<DateTime>("UpdateDate");

                    b.Property<string>("UpdateUser");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users","dbo");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.CalculationData", b =>
                {
                    b.HasOne("SalaryProposal.Models.Models.Positions", "Position")
                        .WithMany("CalculationDatas")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SalaryProposal.Models.Models.Regions", "Region")
                        .WithMany("CalculationDatas")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.RefreshToken", b =>
                {
                    b.HasOne("SalaryProposal.Models.Models.Users")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("SalaryProposal.Models.Models.Users", b =>
                {
                    b.HasOne("SalaryProposal.Models.Models.Roles", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
